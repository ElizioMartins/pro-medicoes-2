#!/usr/bin/env python3
"""
Script para testar CRUD de condom√≠nios
"""
import requests
import json

def test_condominiums():
    base_url = "http://127.0.0.1:8000"
    
    print("üè† === TESTE CRUD DE CONDOM√çNIOS ===")
    
    # Fazer login como admin
    login_data = {
        "username": "admin",
        "password": "admin123"
    }
    
    print("\n1Ô∏è‚É£ === Login como Admin ===")
    response = requests.post(f"{base_url}/api/users/login", params=login_data)
    if response.status_code == 200:
        token = response.json().get('access_token')
        headers = {'Authorization': f'Bearer {token}', 'Content-Type': 'application/json'}
        print("‚úÖ Login bem-sucedido!")
    else:
        print(f"‚ùå Erro no login: {response.status_code}")
        return
    
    # Teste 1: Listar condom√≠nios
    print("\n2Ô∏è‚É£ === Listar Condom√≠nios ===")
    response = requests.get(f"{base_url}/api/condominiums", headers=headers)
    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ Listagem OK - {len(data['condominiums'])} condom√≠nios encontrados")
        print(f"   Total: {data['total']}")
    else:
        print(f"‚ùå Erro na listagem: {response.status_code}")
        print(f"   Resposta: {response.text}")
    
    # Teste 2: Criar condom√≠nio
    print("\n3Ô∏è‚É£ === Criar Condom√≠nio ===")
    new_condominium = {
        "name": "Condom√≠nio Teste",
        "address": "Rua Teste, 123 - Bairro Teste",
        "cnpj": "12.345.678/0001-99",
        "manager": "Gerente Teste",
        "phone": "(11) 99999-9999",
        "email": "teste@condominio.com"
    }
    
    response = requests.post(f"{base_url}/api/condominiums/", json=new_condominium, headers=headers)
    if response.status_code == 200:
        created_condominium = response.json()
        condominium_id = created_condominium['id']
        print(f"‚úÖ Condom√≠nio criado com ID: {condominium_id}")
        print(f"   Nome: {created_condominium['name']}")
    else:
        print(f"‚ùå Erro ao criar condom√≠nio: {response.status_code}")
        print(f"   Resposta: {response.text}")
        return
    
    # Teste 3: Buscar condom√≠nio por ID
    print("\n4Ô∏è‚É£ === Buscar Condom√≠nio por ID ===")
    response = requests.get(f"{base_url}/api/condominiums/{condominium_id}", headers=headers)
    if response.status_code == 200:
        condominium = response.json()
        print(f"‚úÖ Condom√≠nio encontrado: {condominium['name']}")
        print(f"   CNPJ: {condominium['cnpj']}")
    else:
        print(f"‚ùå Erro ao buscar condom√≠nio: {response.status_code}")
    
    # Teste 4: Atualizar condom√≠nio
    print("\n5Ô∏è‚É£ === Atualizar Condom√≠nio ===")
    update_data = {
        "name": "Condom√≠nio Teste Atualizado",
        "manager": "Novo Gerente"
    }
    
    response = requests.put(f"{base_url}/api/condominiums/{condominium_id}", json=update_data, headers=headers)
    if response.status_code == 200:
        updated_condominium = response.json()
        print(f"‚úÖ Condom√≠nio atualizado!")
        print(f"   Nome: {updated_condominium['name']}")
        print(f"   Gerente: {updated_condominium['manager']}")
    else:
        print(f"‚ùå Erro ao atualizar condom√≠nio: {response.status_code}")
        print(f"   Resposta: {response.text}")
    
    # Teste 5: Buscar condom√≠nios com filtro
    print("\n6Ô∏è‚É£ === Buscar com Filtro ===")
    response = requests.get(f"{base_url}/api/condominiums?search=Teste", headers=headers)
    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ Busca com filtro OK - {len(data['condominiums'])} condom√≠nios encontrados")
    else:
        print(f"‚ùå Erro na busca com filtro: {response.status_code}")
    
    # Teste 6: Excluir condom√≠nio
    print("\n7Ô∏è‚É£ === Excluir Condom√≠nio ===")
    response = requests.delete(f"{base_url}/api/condominiums/{condominium_id}", headers=headers)
    if response.status_code == 200:
        print("‚úÖ Condom√≠nio exclu√≠do com sucesso!")
    else:
        print(f"‚ùå Erro ao excluir condom√≠nio: {response.status_code}")
        print(f"   Resposta: {response.text}")
    
    # Teste 7: Tentar buscar condom√≠nio exclu√≠do
    print("\n8Ô∏è‚É£ === Verificar Exclus√£o ===")
    response = requests.get(f"{base_url}/api/condominiums/{condominium_id}", headers=headers)
    if response.status_code == 404:
        print("‚úÖ Condom√≠nio exclu√≠do corretamente (404)")
    else:
        print(f"‚ùå Condom√≠nio ainda existe: {response.status_code}")
    
    print("\nüéâ === TESTE CRUD CONDOM√çNIOS FINALIZADO ===")

if __name__ == "__main__":
    test_condominiums()
